{info:{id:"Video",description:"A simple plugin for displaying videos in Bagel.js"},plugin:{types:{assets:{videos:{args:{},init:(e,t,i,a,s)=>{let o=document.createElement("video");((e,t,a,s)=>{e.onloadeddata=(o=>{e.pause(),e.muted=!1,e.currentTime=0;let d=document.createElement("canvas"),r=d.getContext("2d");d.width=e.videoWidth,d.height=e.videoHeight,r.drawImage(e,0,0);let n=Bagel.internal.current,l=n.plugin;n.plugin=s,i.set.asset.img(a.id,d),n.plugin=l,t({internal:{canvas:d,ctx:r,video:e},...a})})})(o,t,e,a),o.src=e.src,o.load(),o.muted=!0,(e=>{e.play().catch(()=>{e.pause()})})(o)},get:"video",description:"A video. Creates an image asset with the same id that updates as it plays."}}},methods:{game:{playVideo:{fn:{obArg:!1,args:{id:{required:!0,types:["string"],description:"The id of the video to play."},loop:{required:!1,default:!1,types:["boolean"],description:"If the video should loop or not."},startTime:{required:!1,default:0,types:["number"],description:"The starting time for the video in seconds."},muted:{required:!1,default:!1,types:["boolean"],description:"If the video is muted or not."}},fn:(e,t,i)=>{let a=e.get.asset.video(t.id).internal;a.video.loop=t.loop,a.video.currentTime=t.startTime;let s=e.internal.plugins.Internal;if(s.vars.audio.autoPlay)try{a.video.muted=t.muted}catch{s.vars.audio.autoPlay=!1}if(s.vars.audio.autoPlay)((t,a,s)=>{s.video.play().catch(()=>{s.video.pause(),a.vars.audio.autoPlay=!1,s.video.muted=!0,s.video.play().catch(e=>e.pause()),i.vars.queue.push(s);let t=e.internal.plugins.Internal;t.vars.audio.createUnmute(t,e)})})(0,s,a);else{a.video.muted=!0,a.video.play(),i.vars.queue.push(a);let t=e.internal.plugins.Internal;t.vars.audio.createUnmute(t,e)}}}},stopVideo:{fn:{obArg:!1,args:{id:{required:!0,types:["string"],description:"The id of the video to stop."}},fn:(e,t,i)=>{e.get.asset.video(t.id).internal.video.pause()}}}}},scripts:{main:(e,t)=>{let i=t.internal.plugins.Internal.vars.audio.autoPlay;if(i!=e.vars.prevAutoPlay&&(e.vars.prevAutoPlay=i,i)){for(let t in e.vars.queue)e.vars.queue[t].video.muted=!1;e.vars.queue=[]}let a=t.internal.assets.assets.videos;for(let e in a){let i=a[e].internal,s=i.canvas,o=i.ctx;o.clearRect(0,0,s.width,s.height),o.drawImage(i.video,0,0),t.set.asset.img(a[e].id,s,!0)}}}},vars:{prevAutoPlay:!0,queue:[]}}
